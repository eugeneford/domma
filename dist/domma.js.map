{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e280c48abdb97382705f","webpack:///external \"anodum\"","webpack:///./src/domma.js","webpack:///./src/mutation-driver.js","webpack:///./src/mutation-types.js","webpack:///./src/reference-map.js"],"names":["Domma","options","config","childList","attributes","attributeOldValue","characterData","characterDataOldValue","subtree","reset","staticDOM","driver","connectStaticDocument","getStaticDocument","ReferenceError","liveDOM","referenceMap","composeLiveReference","connectLiveDocument","mutationObserver","disconnect","observe","getLiveDocument","transactionStatus","transaction","Promise","resolve","reject","then","element","refElement","position","insertAdjacentElement","removeElement","transactionObserver","MutationObserver","conductTransaction","mutationEmitter","mutations","isTransactionPending","addAdditiveMutations","MutationDriver","onBeforeSync","onAfterSync","additiveMutations","lastTransaction","undefined","bind","conductMutation","reduceAdditiveMutations","TypeError","liveElement","containerNode","getReference","unbind","mutation","attributeName","oldValue","containerId","getReferenceId","setReferenceAttribute","removeReferenceAttribute","addedNodes","removedNodes","nextLiveSibling","nextSibling","length","previousSibling","node","nextStaticSibling","parentNode","liveNodes","Array","prototype","slice","call","childNodes","liveIndex","indexOf","prevLiveSibling","prevStaticSibling","forEach","addedLiveNode","id","removeReference","staticNode","firstChild","removeChild","removedLiveNode","cloneNode","textMutations","getAdditiveMutations","textMutation","nodeValue","insertBefore","appendChild","lNode","ejectAdditiveReferenceMapMutations","reverse","type","ejectAdditiveAttributeMutation","ejectAdditiveChildListMutation","concat","liveNode","types","all","index","splice","filter","sameTarget","target","validType","reference","referenceId","attribute","hasAttribute","value","getAttribute","newReference","replaceReference","ejectAdditiveMutations","flush","hasReference","conductAttributeMutation","conductCharacterDataMutation","conductChildListMutation","liveRefElement","refElementId","insertReference","elementId","ReferenceMap","referenceAttribute","forEachReferenceSave","map","referenceCounter","staticDocument","setAttribute","importNode","rootPath","removeAttribute","path","sNode","saveReference","staticRoot","ownerDocument","Object","hasOwnProperty","previousElementSibling","nextElementSibling","parentElement","firstElementChild","lastElementChild","childIndex","getReferenceById","nodesList","isReferenceId","attr","staticContainer","composeStaticReference","oldStaticElement","newStaticElement","replaceChild","keys"],"mappings":"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","file":"./dist/domma.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"anodum\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"anodum\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"domma\"] = factory(require(\"anodum\"));\n\telse\n\t\troot[\"domma\"] = factory(root[\"anodum\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e280c48abdb97382705f","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"anodum\"\n// module id = 0\n// module chunks = 0","import MutationDriver from './mutation-driver';\n\nexport default class Domma {\n  constructor(options) {\n    this.options = options;\n    this.config = {\n      childList: true,\n      attributes: true,\n      attributeOldValue: true,\n      characterData: true,\n      characterDataOldValue: true,\n      subtree: true,\n    };\n\n    this.reset();\n  }\n\n  connectStaticDocument(staticDOM) {\n    this.driver.connectStaticDocument(staticDOM);\n  }\n\n  composeLiveDocument() {\n    const staticDOM = this.driver.getStaticDocument();\n\n    if (!staticDOM) {\n      throw new ReferenceError('static document is not connected');\n    }\n\n    const liveDOM = this.driver.referenceMap.composeLiveReference(staticDOM);\n\n    this.connectLiveDocument(liveDOM);\n  }\n\n  connectLiveDocument(liveDOM) {\n    this.mutationObserver.disconnect();\n    this.driver.connectLiveDocument(liveDOM);\n    this.mutationObserver.observe(liveDOM, this.config);\n  }\n\n  getStaticDocument() {\n    return this.driver.getStaticDocument();\n  }\n\n  getLiveDocument() {\n    return this.driver.getLiveDocument();\n  }\n\n  isTransactionResolved() {\n    return this.transactionStatus === 'resolved';\n  }\n\n  isTransactionPending() {\n    return this.transactionStatus === 'pending';\n  }\n\n  conductTransaction(transaction) {\n    return new Promise((resolve, reject) => {\n      const liveDOM = this.driver.getLiveDocument();\n      if (!liveDOM) reject(new ReferenceError('live document is not connected'));\n      resolve(liveDOM);\n    }).then(liveDOM => new Promise((resolve) => {\n      this.transactionStatus = 'pending';\n      this.resolve = resolve;\n      transaction(liveDOM);\n    }));\n  }\n\n  insertAdjacentElement(element, refElement, position) {\n    return new Promise((resolve, reject) => {\n      const liveDOM = this.driver.getLiveDocument();\n      if (!liveDOM) reject(new ReferenceError('live document is not connected'));\n      resolve();\n    }).then(() => {\n      this.transactionStatus = 'pending';\n      this.driver.insertAdjacentElement(element, refElement, position);\n      this.transactionStatus = 'resolved';\n    });\n  }\n\n  removeElement(element) {\n    return new Promise((resolve, reject) => {\n      const liveDOM = this.driver.getLiveDocument();\n      if (!liveDOM) reject(new ReferenceError('live document is not connected'));\n      resolve();\n    }).then(() => {\n      this.transactionStatus = 'pending';\n      this.driver.removeElement(element);\n      this.transactionStatus = 'resolved';\n    });\n  }\n\n  reset() {\n    if (this.transactionObserver) this.transactionObserver.disconnect();\n    if (this.mutationObserver) this.mutationObserver.disconnect();\n\n    this.driver = new MutationDriver(this.options);\n    this.transactionStatus = 'resolved';\n    this.transactionObserver = new MutationObserver(this.driver.conductTransaction);\n    this.mutationEmitter = (mutations) => {\n      if (this.isTransactionPending()) {\n        this.driver.conductTransaction(mutations);\n        this.transactionStatus = 'resolved';\n        this.resolve();\n      } else {\n        this.driver.addAdditiveMutations(mutations);\n      }\n    };\n    this.mutationObserver = new MutationObserver(this.mutationEmitter);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/domma.js","import {\n  isDocumentNode,\n  isElementNode,\n  traverseNode,\n} from 'anodum';\n\nimport mutationTypes from './mutation-types';\nimport ReferenceMap from './reference-map';\n\nexport default class MutationDriver {\n  constructor(options) {\n    this.options = {\n      onBeforeSync: () => {\n      },\n      onAfterSync: () => {\n      },\n      ...options,\n    };\n    this.additiveMutations = [];\n    this.lastTransaction = undefined;\n    this.referenceMap = new ReferenceMap(options);\n\n    this.conductTransaction = this.conductTransaction.bind(this);\n    this.conductMutation = this.conductMutation.bind(this);\n    this.reduceAdditiveMutations = this.reduceAdditiveMutations.bind(this);\n  }\n\n  connectStaticDocument(staticDOM) {\n    if (!isDocumentNode(staticDOM)) {\n      throw new TypeError('staticDOM is not a Document');\n    }\n\n    this.referenceMap.connectStaticDocument(staticDOM);\n\n    this.staticDOM = staticDOM;\n  }\n\n  connectLiveDocument(liveDOM) {\n    if (!isDocumentNode(liveDOM)) {\n      throw new TypeError('liveDOM is not a Document');\n    }\n\n    this.liveDOM = liveDOM;\n  }\n\n  getStaticDocument() {\n    return this.staticDOM;\n  }\n\n  getLiveDocument() {\n    return this.liveDOM;\n  }\n\n  ejectAdditiveReferenceMapMutations(liveElement) {\n    const containerNode = this.referenceMap.getReference(liveElement);\n    this.referenceMap.unbind(containerNode);\n  }\n\n  ejectAdditiveAttributeMutation(liveElement, mutation) {\n    const { attributeName, oldValue } = mutation;\n    const containerId = this.referenceMap.getReferenceId(liveElement);\n\n    if (oldValue) {\n      this.referenceMap.setReferenceAttribute(containerId, attributeName, oldValue);\n    } else {\n      this.referenceMap.removeReferenceAttribute(containerId, attributeName);\n    }\n  }\n\n  ejectAdditiveChildListMutation(liveElement, mutation) {\n    const containerNode = this.referenceMap.getReference(liveElement);\n    const {\n      addedNodes,\n      removedNodes,\n    } = mutation;\n\n    let nextLiveSibling = mutation.nextSibling;\n    if (removedNodes.length && addedNodes.length) {\n      nextLiveSibling = addedNodes[addedNodes.length - 1].nextSibling;\n    } else if (removedNodes.length) {\n      const { previousSibling, nextSibling } = mutation;\n      let node = nextSibling;\n      while (node) {\n        if (previousSibling === node.previousSibling) {\n          nextLiveSibling = node;\n          break;\n        }\n        node = node.previousSibling;\n      }\n    }\n\n    let nextStaticSibling;\n    if (nextLiveSibling && nextLiveSibling.parentNode) {\n      const liveNodes = Array.prototype.slice.call(nextLiveSibling.parentNode.childNodes);\n      const liveIndex = liveNodes.indexOf(nextLiveSibling);\n      nextStaticSibling = containerNode.childNodes[liveIndex];\n    }\n\n    const prevLiveSibling = mutation.previousSibling;\n\n    let prevStaticSibling;\n    if (prevLiveSibling && prevLiveSibling.parentNode) {\n      const liveNodes = Array.prototype.slice.call(prevLiveSibling.parentNode.childNodes);\n      const liveIndex = liveNodes.indexOf(prevLiveSibling);\n      prevStaticSibling = containerNode.childNodes[liveIndex];\n    }\n\n    addedNodes.forEach((addedLiveNode) => {\n      if (isElementNode(addedLiveNode)) {\n        const id = this.referenceMap.getReferenceId(addedLiveNode);\n        this.referenceMap.removeReference(id);\n        this.referenceMap.unbind(addedLiveNode);\n        this.reduceAdditiveMutations(addedLiveNode);\n      } else {\n        let staticNode;\n        if (nextStaticSibling) {\n          staticNode = nextStaticSibling.previousSibling;\n        } else if (prevStaticSibling && prevStaticSibling.nextSibling) {\n          staticNode = prevStaticSibling.nextSibling;\n        } else {\n          staticNode = containerNode.firstChild;\n        }\n        containerNode.removeChild(staticNode);\n      }\n    });\n\n    removedNodes.forEach((removedLiveNode) => {\n      let staticNode;\n      if (isElementNode(removedLiveNode)) {\n        staticNode = this.referenceMap.getReference(removedLiveNode);\n      } else {\n        staticNode = removedLiveNode.cloneNode();\n        const textMutations = this.getAdditiveMutations(removedLiveNode);\n        textMutations.forEach((textMutation) => {\n          staticNode.nodeValue = textMutation.oldValue;\n        });\n      }\n\n      if (nextStaticSibling) {\n        containerNode.insertBefore(staticNode, nextStaticSibling);\n      } else if (prevStaticSibling && prevStaticSibling.nextSibling) {\n        containerNode.insertBefore(staticNode, prevStaticSibling.nextSibling);\n      } else {\n        containerNode.appendChild(staticNode);\n      }\n    });\n  }\n\n  ejectAdditiveMutations(liveElement) {\n    traverseNode(liveElement, (lNode) => {\n      const mutations = this.getAdditiveMutations(lNode);\n\n      this.ejectAdditiveReferenceMapMutations(lNode);\n\n      mutations.reverse().forEach((mutation) => {\n        switch (mutation.type) {\n          case mutationTypes.attributes:\n            this.ejectAdditiveAttributeMutation(lNode, mutation);\n            break;\n          default:\n            this.ejectAdditiveChildListMutation(lNode, mutation);\n            break;\n        }\n      });\n    });\n  }\n\n  addAdditiveMutations(mutations) {\n    this.additiveMutations = this.additiveMutations.concat(mutations);\n  }\n\n  reduceAdditiveMutations(liveNode, types = mutationTypes.all) {\n    const additiveMutations = this.getAdditiveMutations(liveNode, types);\n\n    additiveMutations.forEach((mutation) => {\n      const index = this.additiveMutations.indexOf(mutation);\n      this.additiveMutations.splice(index, 1);\n      mutation.addedNodes.forEach(node => this.reduceAdditiveMutations(node));\n      mutation.removedNodes.forEach(node => this.reduceAdditiveMutations(node));\n    });\n  }\n\n  getAdditiveMutations(liveNode, types = mutationTypes.all) {\n    return this.additiveMutations.filter((mutation) => {\n      const sameTarget = mutation.target === liveNode;\n      const validType = types.indexOf(mutation.type) > -1;\n      return sameTarget && validType;\n    });\n  }\n\n  hasAdditiveMutations(liveNode, types = mutationTypes.all) {\n    return this.getAdditiveMutations(liveNode, types).length > 0;\n  }\n\n  conductAttributeMutation(mutation) {\n    const liveNode = mutation.target;\n    const reference = this.referenceMap.getReference(liveNode);\n    const referenceId = this.referenceMap.getReferenceId(liveNode);\n    const attribute = mutation.attributeName;\n\n    this.options.onBeforeSync(reference);\n    if (liveNode.hasAttribute(attribute)) {\n      const value = liveNode.getAttribute(attribute);\n      this.referenceMap.setReferenceAttribute(referenceId, attribute, value);\n    } else {\n      this.referenceMap.removeReferenceAttribute(referenceId, attribute);\n    }\n    this.options.onAfterSync(reference);\n  }\n\n  conductCharacterDataMutation(mutation) {\n    const liveNode = mutation.target.parentNode;\n    const reference = this.referenceMap.getReference(liveNode);\n    const referenceId = this.referenceMap.getReferenceId(liveNode);\n    this.reduceAdditiveMutations(mutation.target, [mutationTypes.characterData]);\n    this.options.onBeforeSync(reference);\n    const newReference = this.referenceMap.replaceReference(liveNode, referenceId);\n    this.ejectAdditiveMutations(liveNode);\n    this.referenceMap.flush();\n    this.options.onAfterSync(newReference);\n  }\n\n  conductChildListMutation(mutation) {\n    const liveNode = mutation.target;\n    const reference = this.referenceMap.getReference(liveNode);\n    const referenceId = this.referenceMap.getReferenceId(liveNode);\n    const {\n      addedNodes,\n      removedNodes,\n      nextSibling,\n      previousSibling,\n    } = mutation;\n\n    // for target.innerHTML or target.replacedChild\n    if (addedNodes.length && removedNodes.length && !nextSibling && !previousSibling) {\n      this.reduceAdditiveMutations(liveNode, [mutationTypes.childList]);\n    }\n\n    this.options.onBeforeSync(reference);\n    const newReference = this.referenceMap.replaceReference(liveNode, referenceId);\n    this.ejectAdditiveMutations(liveNode);\n    this.referenceMap.flush();\n    this.options.onAfterSync(newReference);\n  }\n\n  conductMutation(mutation) {\n    switch (mutation.type) {\n      case mutationTypes.attributes:\n        if (!this.referenceMap.hasReference(mutation.target)) return;\n        this.conductAttributeMutation(mutation);\n        break;\n      case mutationTypes.characterData:\n        if (!this.referenceMap.hasReference(mutation.target.parentNode)) return;\n        this.conductCharacterDataMutation(mutation);\n        break;\n      default:\n        if (!this.referenceMap.hasReference(mutation.target)) return;\n        this.conductChildListMutation(mutation);\n        break;\n    }\n  }\n\n  conductTransaction(mutations) {\n    mutations.forEach(this.conductMutation);\n  }\n\n  insertAdjacentElement(liveElement, liveRefElement, position) {\n    const refElementId = this.referenceMap.getReferenceId(liveRefElement);\n    this.referenceMap.insertReference(liveElement, refElementId, position);\n    liveRefElement.insertAdjacentElement(position, liveElement);\n  }\n\n  removeElement(liveElement) {\n    const elementId = this.referenceMap.getReferenceId(liveElement);\n    this.referenceMap.removeReference(elementId);\n    liveElement.parentNode.removeChild(liveElement);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mutation-driver.js","export default {\n  all: ['childList', 'attributes', 'characterData'],\n  characterData: 'characterData',\n  attributes: 'attributes',\n  childList: 'childList',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/mutation-types.js","import {\n  getNodeByTreePath,\n  getTreePathOfNode,\n  isDocumentNode,\n  isElementNode,\n  traverseNode,\n} from 'anodum';\n\n\nexport default class ReferenceMap {\n  constructor(options) {\n    this.options = {\n      referenceAttribute: 'data-uuid',\n      forEachReferenceSave: () => {\n      },\n      ...options,\n    };\n    this.map = {};\n    this.referenceCounter = 1;\n  }\n\n  connectStaticDocument(staticDocument) {\n    this.staticDocument = staticDocument;\n  }\n\n  saveReference(liveNode, staticNode, id) {\n    const referenceId = id || `ref_${this.referenceCounter}`;\n\n    if (liveNode.getAttribute(this.options.referenceAttribute) !== referenceId) {\n      liveNode.setAttribute(this.options.referenceAttribute, referenceId);\n    }\n\n    this.map[referenceId] = { staticNode };\n    this.referenceCounter += 1;\n    return referenceId;\n  }\n\n  composeStaticReference(liveNode) {\n    if (!isDocumentNode(liveNode) && !isElementNode(liveNode)) {\n      throw new TypeError('liveNode is not neither Document nor Element');\n    }\n\n    if (!this.staticDocument) {\n      throw new ReferenceError('static document is not connected');\n    }\n\n    const staticDOM = this.staticDocument;\n    const staticNode = staticDOM.importNode(liveNode, true);\n    const rootPath = getTreePathOfNode(liveNode);\n\n    staticNode.removeAttribute(this.options.referenceAttribute);\n\n    traverseNode(liveNode, (lNode, path) => {\n      if (!isElementNode(lNode)) return;\n\n      path.splice(0, rootPath.length, 0);\n\n      const sNode = getNodeByTreePath(staticNode, path);\n      const id = lNode.getAttribute(this.options.referenceAttribute);\n\n      if (id) {\n        this.saveReference(lNode, sNode, id);\n      } else {\n        this.saveReference(lNode, sNode);\n      }\n\n      this.options.forEachReferenceSave(lNode, sNode);\n    }, true);\n\n    return staticNode;\n  }\n\n  composeLiveReference(staticNode) {\n    if (!isDocumentNode(staticNode) && !isElementNode(staticNode)) {\n      throw new TypeError('staticNode is not neither Document nor Element');\n    }\n\n    const staticRoot = isDocumentNode(staticNode) ? staticNode : staticNode.ownerDocument;\n    const liveNode = staticNode.cloneNode(true);\n\n    traverseNode(liveNode, (lNode, path) => {\n      if (!isElementNode(lNode)) return;\n\n      const sNode = getNodeByTreePath(staticRoot, path);\n      const id = lNode.getAttribute(this.options.referenceAttribute);\n\n      if (id) {\n        this.saveReference(lNode, sNode, id);\n      } else {\n        this.saveReference(lNode, sNode);\n      }\n\n      this.options.forEachReferenceSave(lNode, sNode);\n    }, true);\n\n    return liveNode;\n  }\n\n  isReferenceId(id) {\n    return Object.prototype.hasOwnProperty.call(this.map, id);\n  }\n\n  getReferenceId(liveNode) {\n    if (!isElementNode(liveNode)) return undefined;\n    return liveNode.getAttribute(this.options.referenceAttribute);\n  }\n\n  getPreviousReferenceId(liveNode) {\n    let referenceId;\n    let node = liveNode.previousElementSibling;\n    while (node) {\n      referenceId = this.getReferenceId(node);\n      if (referenceId) break;\n      node = node.previousElementSibling;\n    }\n\n    return referenceId;\n  }\n\n  getNextReferenceId(liveNode) {\n    let referenceId;\n    let node = liveNode.nextElementSibling;\n    while (node) {\n      referenceId = this.getReferenceId(node);\n      if (referenceId) break;\n      node = node.nextElementSibling;\n    }\n\n    return referenceId;\n  }\n\n  getParentReferenceId(liveNode) {\n    let referenceId;\n    let node = liveNode.parentElement;\n    while (node) {\n      referenceId = this.getReferenceId(node);\n      if (referenceId) break;\n      node = node.parentElement;\n    }\n\n    return referenceId;\n  }\n\n  getFirstChildReferenceId(liveNode) {\n    let referenceId;\n    let node = liveNode.firstElementChild;\n    while (node) {\n      referenceId = this.getReferenceId(node);\n      if (referenceId) break;\n      node = node.nextElementSibling;\n    }\n\n    return referenceId;\n  }\n\n  getLastChildReferenceId(liveNode) {\n    let referenceId;\n    let node = liveNode.lastElementChild;\n    while (node) {\n      referenceId = this.getReferenceId(node);\n      if (referenceId) break;\n      node = node.previousElementSibling;\n    }\n\n    return referenceId;\n  }\n\n  getChildReferenceId(liveNode, childIndex) {\n    let referenceId;\n    let index = 0;\n    let node = liveNode.firstElementChild;\n    while (node) {\n      if (this.hasReference(node)) {\n        if (index === childIndex) {\n          referenceId = this.getReferenceId(node);\n          break;\n        }\n\n        index += 1;\n      }\n      node = node.nextElementSibling;\n    }\n\n    return referenceId;\n  }\n\n  indexOfReferenceId(liveNode, referenceId) {\n    let node = liveNode.firstElementChild;\n    while (node) {\n      if (node.getAttribute(this.options.referenceAttribute) === referenceId) {\n        const staticNode = this.getReferenceById(referenceId);\n        const nodesList = Array.prototype.slice.call(staticNode.parentNode.childNodes);\n        return nodesList.indexOf(staticNode);\n      }\n      node = node.nextElementSibling;\n    }\n\n    return -1;\n  }\n\n  hasReference(liveNode) {\n    return this.isReferenceId(this.getReferenceId(liveNode));\n  }\n\n  getReference(liveNode) {\n    const id = this.getReferenceId(liveNode);\n    return this.getReferenceById(id);\n  }\n\n  getReferenceById(id) {\n    if (!this.isReferenceId(id)) return undefined;\n    return this.map[id].staticNode;\n  }\n\n  setReferenceAttribute(id, attr, value) {\n    if (!this.isReferenceId(id)) {\n      throw new ReferenceError('reference with specified id is not found');\n    }\n\n    const { staticNode } = this.map[id];\n    staticNode.setAttribute(attr, value);\n  }\n\n  hasReferenceAttribute(id, attr) {\n    if (!this.isReferenceId(id)) {\n      throw new ReferenceError('reference with specified id is not found');\n    }\n\n    const { staticNode } = this.map[id];\n    return staticNode.hasAttribute(attr);\n  }\n\n  removeReferenceAttribute(id, attr) {\n    if (!this.isReferenceId(id)) {\n      throw new ReferenceError('reference with specified id is not found');\n    }\n\n    const { staticNode } = this.map[id];\n    staticNode.removeAttribute(attr);\n  }\n\n  removeReference(id) {\n    if (!this.isReferenceId(id)) {\n      throw new ReferenceError('reference with specified id is not found');\n    }\n\n    const { staticNode } = this.map[id];\n    staticNode.parentNode.removeChild(staticNode);\n    delete this.map[id];\n\n    return staticNode;\n  }\n\n  appendReference(liveNode, containerId) {\n    if (!this.isReferenceId(containerId)) {\n      throw new ReferenceError('reference with specified containerId is not found');\n    }\n\n    const staticContainer = this.map[containerId].staticNode;\n    const staticNode = this.composeStaticReference(liveNode);\n\n    staticContainer.appendChild(staticNode);\n\n    return staticNode;\n  }\n\n  insertReference(liveNode, refElementId, position) {\n    if (!this.isReferenceId(refElementId)) {\n      throw new ReferenceError('reference with specified refElementId is not found');\n    }\n\n    const refElement = this.map[refElementId].staticNode;\n    const staticNode = this.composeStaticReference(liveNode);\n\n    refElement.insertAdjacentElement(position, staticNode);\n\n    return staticNode;\n  }\n\n  replaceReference(liveNode, referenceId) {\n    if (!this.isReferenceId(referenceId)) {\n      throw new ReferenceError('reference with specified referenceId is not found');\n    }\n\n    const oldStaticElement = this.map[referenceId].staticNode;\n    const newStaticElement = this.composeStaticReference(liveNode, referenceId);\n\n    oldStaticElement.parentNode.replaceChild(newStaticElement, oldStaticElement);\n\n    return newStaticElement;\n  }\n\n  flush() {\n    Object.keys(this.map).forEach((id) => {\n      const { staticNode } = this.map[id];\n      let node = staticNode;\n\n      while (node && !isDocumentNode(node)) {\n        if (!node.parentNode) {\n          delete this.map[id];\n          return;\n        }\n        node = node.parentNode;\n      }\n    });\n  }\n\n  unbind(liveNode) {\n    if (!isElementNode(liveNode)) return;\n    liveNode.removeAttribute(this.options.referenceAttribute);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reference-map.js"],"sourceRoot":""}